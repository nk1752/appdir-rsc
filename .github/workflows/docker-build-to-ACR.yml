name: Build and deploy using Docker to AKS

on:
  workflow_dispatch:

env:
  ACR_RESOURCE_GROUP: aks-rg
  AZURE_CONTAINER_REGISTRY: vhacr1
  CLUSTER_NAME: aks-cluster
  CLUSTER_RESOURCE_GROUP: aks-rg
  RESOURCE_GROUP: aks-rg
  CONTAINER_NAME: appdir-sc
  CONTAINER_TAG: ${{ github.sha }}
  NAMESPACE: rsc
  NODE_ENV: production
  PLATFORM: aks


jobs:

  github_variables:
    runs-on: ubuntu-latest

    steps:

      - name: github.sha
        run: echo `github SHA >>> ${{ github.sha }}`
      - name: github.env
        run: echo `github env >>> ${{ github.env }}`
      - name: ${{github.run_number}}
        run: echo `run number >>> ${{ github.run_number }}`
      - name: ${{github.run_id}}
        run: echo `run id >>> ${{github.run_id}}`

  build_image:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [github_variables]
    
    steps:

      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      - name: Build with Docker
        run: |
          docker build . --file Dockerfile --tag ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }}

      
  deploy_to_aks:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [build_image]

    steps:

      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          namespace: ${{ env.NAMESPACE }}
          action: deploy
          strategy: basic
          manifests: |
            manifests/deployment.yml
            manifests/service.yml
            
        
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ env.CONTAINER_TAG }}

      - name: update image tag
        run: |
          kubectl get pods -A