FROM node:18-alpine AS builder

RUN pwd
RUN ls

# Set the working directory to /app inside the container
WORKDIR /app

COPY package*.json ./
RUN npm install

# Copy app files
COPY ./ ./
# install dependencies (npm ci makes sure the exact versions in the lockfile gets installed)
RUN npm ci
# Build the app
RUN npm run build


FROM node:18-alpine

RUN addgroup -S viva && adduser -S devops -G viva
USER devops

RUN echo after user setup
RUN pwd
RUN ls

WORKDIR /app

COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/server.js ./server.js
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./next.config.js
COPY --from=builder /app/.env.local ./.env.local
COPY --from=builder /app/.env.production.local ./.env.production.local

ARG NODE_ENV
ARG PLATFORM
ARG API_SERVICE

# Set envirnoment var
ENV NODE_ENV=${NODE_ENV}
ENV PLATFORM=${PLATFORM}
ENV API_SERVICE=${API_SERVICE}


# Expose the port on which the app will be running
EXPOSE 3000

CMD ["node", "server.js"]